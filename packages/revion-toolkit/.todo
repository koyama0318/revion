# Revion Toolkit TODO

## コア機能のラッパー

- [x] **型定義の見直し**
  - [x] core型との互換性改善
  - [x] ToolkitDomainModel / ToolkitReadModelのインターフェース定義
  - [x] バリデーション関連の型修正

- [x] **簡略化されたAPIの実装**
  - [x] `createDomainService` 関数の実装
  - [x] `createEventProcessor` 関数の実装
  - [x] Zodを使ったバリデーション統合

- [ ] **エラーハンドリングの改善**
  - [ ] 一貫したエラー型の提供
  - [ ] より良いエラーメッセージとスタックトレース
  - [ ] 例外ベースのエラーハンドリング

## ストレージアダプタ

- [ ] **基本的なストレージ実装**
  - [ ] インメモリストア（開発・テスト用）
    - [ ] InMemoryEventStore
    - [ ] InMemoryDataStore
  - [ ] ファイルベースストア
    - [ ] FileEventStore
    - [ ] FileDataStore
  - [ ] ローカルストレージ (ブラウザ用)

- [ ] **データベースアダプタ**
  - [ ] SQLアダプタ（PostgreSQL）
  - [ ] NoSQLアダプタ（MongoDB）
  - [ ] クラウドストレージ（S3、Firestore）

## 開発者エクスペリエンス

- [ ] **テスト支援**
  - [ ] テストヘルパー関数
  - [ ] モックファクトリ
  - [ ] スナップショットテスト

- [ ] **デバッグサポート**
  - [ ] イベントビューワー
  - [ ] ロギングユーティリティ
  - [ ] パフォーマンス計測

## フレームワーク統合

- [ ] **Webフレームワーク連携**
  - [ ] Express/Fastifyミドルウェア
  - [ ] Next.jsアダプタ
  - [ ] HTTP APIユーティリティ

- [ ] **UIコンポーネント**
  - [ ] React Hooks
  - [ ] イベントストリーム購読
  - [ ] 状態同期機能

## 改善作業

- [ ] **コード品質**
  - [ ] ユニットテストのカバレッジ向上
  - [ ] E2Eテストの追加
  - [ ] コードコメントとJSDocの充実

- [ ] **ドキュメンテーション**
  - [ ] API リファレンス
  - [ ] 使用例と典型的なパターン
  - [ ] チュートリアル

- [ ] **パフォーマンス最適化**
  - [ ] バンドルサイズの削減
  - [ ] メモ化とキャッシング
  - [ ] 非同期処理の最適化 